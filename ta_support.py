# -*- coding: utf-8 -*-
"""TA_test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hDnYNtT9a2JuYTkKCOBMcjcXGD-8fKpS
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import datetime
import colorama
import os
import json
from colorama import Fore
from colorama import Style

print("-"*40)
print("| Script location:", __file__)
print("| Current working directory:", Fore.YELLOW + os.getcwd() + Style.RESET_ALL)
print("| Change working directory to script location")
os.chdir(os.path.dirname(__file__))
print("| Current working directory:", Fore.YELLOW + os.getcwd() + Style.RESET_ALL)
print("-"*40)
print("| Search 'ta_support_files.json'")
if os.path.isfile('./ta_support_files.json'):
  fileLocations = json.load(open('./ta_support_files.json'))
else:
  print(Fore.RED + "| 'ta_support_files.json' not found"+ Style.RESET_ALL)
  print("| exit")
  exit()
print("-"*40)
print("| Search excel files in 'ta_support_files.json")
for k, v in fileLocations.items():
  if os.path.isfile(v):
    print("| Found file: ", k, v)
  else:
    print("| File not found: ", k, v)
    print(Fore.RED + "| Please check 'ta_support_files.json' and check the file location of excel files."+ Style.RESET_ALL)
    print("| exit")
    exit()

# fileLocations = {
#   "attend": './112-1_物理學史出席程式用.xlsx',
#   "hw": './112-1_物理學史作業程式用.xlsx'
# }

mode = ''
path = ''
write_target = ''
while mode != "hw" and mode != "attend":
  mode = input(Fore.RED + "輸入 'attend' 開始點名 / 'hw' 開始登記作業 : "+ Style.RESET_ALL)
  if mode == "hw":
    write_target = input(Fore.BLUE+"hw number:"+Style.RESET_ALL)
    path = fileLocations['hw']
  elif mode == "attend":
    write_target = input(Fore.BLUE+'Date:'+Style.RESET_ALL)
    path = fileLocations['attend']
  else:
    print(Fore.RED + Style.BRIGHT + 'ERROR! Plz check the mode!' + Style.RESET_ALL)


revised = pd.read_excel(path)
today_col = pd.DataFrame(np.zeros(np.array(revised).shape[0]),columns = [write_target])
revised = pd.concat([revised,today_col],axis=1)
revised['學號'] = revised['學號'].astype(int)

d = 1
while d != 0:
  stid = input(Fore.YELLOW + 'Input the student id , input 0 to stop : ' + Style.RESET_ALL)
  nonint = []
  if len(list(stid)) != 0:
    for i in list(stid):
      if not i.isdigit():
        nonint.append(i)
  else:
    nonint.append(1)

  if len(nonint)!=0:
    print(Fore.RED + Style.BRIGHT + 'ERROR! Not int, Plz check the student id!' + Style.RESET_ALL)
  elif len(nonint)==0 and int(stid)==0:
    d = 0
  else:
    filter = revised[revised["學號"] == int(stid)]
    print("| Search:", filter)
        
    if np.array(filter).shape[0] == 1 :
      target = np.array(revised.loc[revised['學號']==int(stid),'姓名'])[0]
      check = input(Fore.RED + 'Is %s? ENTER/n : '%target + Style.RESET_ALL)
      if len(list(check)) == 0:
        revised.loc[(revised['學號']== int(stid)) , write_target] = 1
      else:
        print(Fore.RED + Style.BRIGHT + 'ERROR! Plz check the student id!' + Style.RESET_ALL)
      revised.loc[(revised['學號']== int(stid)) , write_target] = 1
    if np.array(filter).shape[0] == 0 and d == 1:
      print(Fore.RED + Style.BRIGHT + 'ERROR! Plz check the student id!' + Style.RESET_ALL)

revised.to_excel(path,index=False)
print(Fore.BLUE + Style.BRIGHT + 'The data has been saved !' + Style.RESET_ALL)
